geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
# scale_fill_manual(values=c("#a6cee3"))+
# scale_color_manual(values=c("#a6cee3"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#1f78b4", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#e31a1c", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#1f78b4", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#e31a1c", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="კანდიდატთა სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c("#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c("#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#1f78b4", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#e31a1c", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#1f78b4", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#e31a1c", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="კანდიდატთა სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c("#e7b031", "#003a75", "#dc082b",  "#a6cee3"))+
scale_color_manual(values=c("#e7b031", "#003a75", "#dc082b",  "#a6cee3"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#1f78b4", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#e31a1c", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#1f78b4", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#e31a1c", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="კანდიდატთა სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
preds <- rbind(mu_dream, mu_unm, mu_eurogeo, mu_apg)%>%
mutate(
party = factor(party, levels=c("ქართული ოცნება", "ერთიანი ნაციონალური მოძრაობა", "ევროპული საქართველო", "პატრიოტთა ალიანსი"))
)
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c("#e7b031", "#003a75", "#dc082b",  "#a6cee3"))+
scale_color_manual(values=c("#e7b031", "#003a75", "#dc082b",  "#a6cee3"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#1f78b4", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#e31a1c", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#1f78b4", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#e31a1c", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="კანდიდატთა სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#1f78b4", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#e31a1c", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#1f78b4", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#e31a1c", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="კანდიდატთა სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="კანდიდატთა სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
ggsave("predictions.png", height=4)
ggsave("predictions.png", height=10)
ggsave("predictions.png", height=8, width=12)
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = 0.01, y = 0.009,  color="#a6cee3", label = "1%-იანი საარჩევნო ბარიერი")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = 0.01, y = 0.009,  label = "1%-იანი\nსაარჩევნო\nბარიერი")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = 0.01, y = 0.009,  label = "1%-იანი\nსაარჩევნო\nბარიერი")+
annotate("text", x = 0.4, y = 0.009,  label = "40%-იანი\nჩამკეტი\nბარიერი")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
library(ggiraph)
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = 0.01, y = 0.009,  label = "1%-იანი\nსაარჩევნო\nბარიერი")+
annotate("text", x = 0.4, y = 0.009,  label = "40%-იანი\nჩამკეტი\nბარიერი")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank()) -> gg
gg_g <- girafe(print(gg))
gg_g
geom_density2d_interactive(aes(tooltip = Mean), size = 2)
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density_interactive(aes(y = (..count..)/sum(..count..)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = 0.01, y = 0.009,  label = "1%-იანი\nსაარჩევნო\nბარიერი")+
annotate("text", x = 0.4, y = 0.009,  label = "40%-იანი\nჩამკეტი\nბარიერი")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank()) -> gg
ggsave("predictions.png", gg, height=8, width=12)
gg_g <- girafe(print(gg))
gg_g
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density_interactive(aes(y = (..count..)/sum(..count..), tooltip=median(`2020-07-13`)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = 0.01, y = 0.009,  label = "1%-იანი\nსაარჩევნო\nბარიერი")+
annotate("text", x = 0.4, y = 0.009,  label = "40%-იანი\nჩამკეტი\nბარიერი")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank()) -> gg
ggsave("predictions.png", gg, height=8, width=12)
gg_g <- girafe(print(gg))
gg_g <- girafe(print(gg))
gg_g
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density_interactive(aes(y = (..count..)/sum(..count..), tooltip=median(`2020-07-13`)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)), family="BPG Excelsior Exp")+
annotate("text", x = 0.01, y = 0.009,  label = "1%-იანი\nსაარჩევნო\nბარიერი")+
annotate("text", x = 0.4, y = 0.009,  label = "40%-იანი\nჩამკეტი\nბარიერი")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank()) -> gg
ggsave("predictions.png", gg, height=8, width=12)
gg_g <- girafe(print(gg))
gg_g
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density_interactive(aes(y = (..count..)/sum(..count..), tooltip=median(`2020-07-13`)), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = 0.01, y = 0.009,  label = "1%-იანი\nსაარჩევნო\nბარიერი", family="BPG Excelsior Exp")+
annotate("text", x = 0.4, y = 0.009,  label = "40%-იანი\nჩამკეტი\nბარიერი", family="BPG Excelsior Exp")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank()) -> gg
ggsave("predictions.png", gg, height=8, width=12)
gg_g <- girafe(print(gg))
gg_g
gg_g <- girafe(print(gg), widht=12)
gg_g <- girafe(print(gg, width=12))
gg_g
htmlwidgets::saveWidget(gg_g, "interactive.html")
gg_g <- girafe(print(gg, width=12), width_svg = 12, height_svg = 8)
gg_g
htmlwidgets::saveWidget(gg_g, "interactive.html")
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density_interactive(aes(y = (..count..)/sum(..count..), tooltip=party), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = 0.01, y = 0.009,  label = "1%-იანი\nსაარჩევნო\nბარიერი", family="BPG Excelsior Exp")+
annotate("text", x = 0.4, y = 0.009,  label = "40%-იანი\nჩამკეტი\nბარიერი", family="BPG Excelsior Exp")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank()) -> gg
ggplot(preds, aes(`2020-07-13`, group=party, fill=party, color=party))+
geom_density_interactive(aes(y = (..count..)/sum(..count..), tooltip=party), alpha=0.5)+
scale_fill_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
scale_color_manual(values=c( "#a6cee3", "#dc082b", "#003a75", "#e7b031"))+
geom_vline(xintercept = 0.5)+
geom_vline(xintercept = 0.4)+
geom_vline(xintercept = 0.01)+
geom_vline(xintercept = median(mu_dream$`2020-07-13`), color="#a6cee3", linetype = "longdash")+
geom_vline(xintercept = median(mu_unm$`2020-07-13`), color="#dc082b", linetype = "longdash")+
geom_vline(xintercept = median(mu_eurogeo$`2020-07-13`), color="#003a75", linetype = "longdash")+
geom_vline(xintercept = median(mu_apg$`2020-07-13`), color="#e7b031", linetype = "longdash")+
annotate("text", x = median(mu_dream$`2020-07-13`), y = 0.009,  color="#a6cee3", label = sprintf("%0.f", round(median(mu_dream$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_unm$`2020-07-13`), y = 0.009,  color="#dc082b", label = sprintf("%0.f", round(median(mu_unm$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_eurogeo$`2020-07-13`), y = 0.009,  color="#003a75", label = sprintf("%0.f", round(median(mu_eurogeo$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = median(mu_apg$`2020-07-13`), y = 0.009,  color="#e7b031", label = sprintf("%0.f", round(median(mu_apg$`2020-07-13`)*100, digits = 0)))+
annotate("text", x = 0.01, y = 0.009,  label = "1%-იანი\nსაარჩევნო\nბარიერი", family="BPG Excelsior Exp")+
annotate("text", x = 0.4, y = 0.009,  label = "40%-იანი\nჩამკეტი\nბარიერი", family="BPG Excelsior Exp")+
scale_x_continuous(labels=function(x)x*100, limits=c(0, 1))+
# facet_wrap(~party)
labs(title="პოლიტიკური პარტიების სიმულირებული პროპორცია",
subtitle="წარწერებზე მოცემულია სიმულაციათა მედიანური მნიშვნელობები",
caption="ეფუძნება 2000 სიმულაციას,\nაპრიორულ ალბათობად მიჩნეულია\n2017 და 2018 წლის არჩევნების შედეგები",
x="%")+
theme_plot+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank()) -> gg
ggsave("predictions.png", gg, height=8, width=12)
gg_g <- girafe(print(gg, width=12), width_svg = 12, height_svg = 8)
gg_g
htmlwidgets::saveWidget(gg_g, "interactive.html")
